import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';class SignUpApp extends StatelessWidget {  const SignUpApp({super.key});  @override  Widget build(BuildContext context) {    return MaterialApp(      title: 'Firebase SignIn App',      home: SignUpScreen(),    );  }}class SignUpScreen extends StatefulWidget {  const SignUpScreen({super.key});  @override  _SignUpScreenState createState() => _SignUpScreenState();}class _SignUpScreenState extends State<SignUpScreen> {  final TextEditingController _emailController = TextEditingController();  final TextEditingController _passwordController = TextEditingController();  @override  void dispose() {    _emailController.dispose();    _passwordController.dispose();    super.dispose();  }  Future<void> signUpUser(String email, String password) async {    if (password.length < 6) {      _showError('비밀번호는 최소 6자 이상이어야 합니다.');      return;    }    try {      final credential =          await FirebaseAuth.instance.createUserWithEmailAndPassword(        email: email,        password: password,      );      // 다른 화면으로 이동하거나 성공 메시지를 표시      _showSuccess('회원가입에 성공했습니다!');    } on FirebaseAuthException catch (e) {      if (e.code == 'email-already-in-use') {        _showError('이미 해당 이메일로 계정이 존재합니다.');      }    } catch (e) {      _showError('오류 발생: $e');    }  }  void _showError(String message) {    ScaffoldMessenger.of(context)        .showSnackBar(SnackBar(content: Text(message)));  }  void _showSuccess(String message) {    ScaffoldMessenger.of(context)        .showSnackBar(SnackBar(content: Text(message)));  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: const Text('회원가입 앱'),      ),      body: Padding(        padding: const EdgeInsets.all(18.0),        child: Column(          mainAxisAlignment: MainAxisAlignment.center,          children: [            TextField(              controller: _emailController,              decoration: const InputDecoration(labelText: '이메일'),            ),            const SizedBox(height: 10),            TextField(              controller: _passwordController,              decoration: const InputDecoration(labelText: '비밀번호'),              obscureText: true, // 비밀번호 입력 숨기기            ),            const SizedBox(height: 30),            ElevatedButton(              onPressed: () {                signUpUser(_emailController.text, _passwordController.text);              },              child: const Text('회원가입'),            ),          ],        ),      ),    );  }}